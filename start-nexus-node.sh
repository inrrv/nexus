#!/bin/bash
set -e

# --- –¶–≤–µ—Ç–∞ ---
GREEN="\e[32m"
RED="\e[31m"
PINK="\e[35m"
NC="\e[0m"

# --- –ê–Ω–∏–º–∞—Ü–∏—è ---
animate_loading() {
    for ((i = 1; i <= 3; i++)); do
        printf "\r${GREEN}–ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é${NC}."
        sleep 0.3
        printf "\r${GREEN}–ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é${NC}.."
        sleep 0.3
        printf "\r${GREEN}–ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–Ω—é${NC}..."
        sleep 0.3
    done
    echo ""
}

animate_loading

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ whiptail ---
if ! command -v whiptail &>/dev/null; then
    echo -e "${RED}whiptail –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
    sudo apt update && sudo apt install -y whiptail
fi

# --- –§—É–Ω–∫—Ü–∏—è: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker ---
install_docker() {
    if ! command -v docker &>/dev/null; then
        echo -e "${PINK}Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
        sudo apt update
        sudo apt install -y curl ca-certificates apt-transport-https gnupg lsb-release
        curl -fsSL https://download.docker.com/linux/$(. /etc/os-release && echo "$ID")/gpg \
            | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        echo \
          "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
           https://download.docker.com/linux/$(. /etc/os-release && echo "$ID") \
           $(. /etc/os-release && echo "$VERSION_CODENAME") stable" \
          | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        sudo apt update
        sudo apt install -y docker-ce docker-ce-cli containerd.io
        echo -e "${GREEN}‚úî Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    else
        echo -e "${GREEN}‚úî Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (${NC}$(docker --version)${GREEN})${NC}"
    fi
}

# --- –§—É–Ω–∫—Ü–∏—è: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose ---
install_docker_compose() {
    if ! command -v docker-compose &>/dev/null; then
        echo -e "${PINK}Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...${NC}"
        sudo apt update && sudo apt install -y wget jq

        COMPOSE_VER=$(wget -qO- https://api.github.com/repos/docker/compose/releases/latest | jq -r ".tag_name")

        sudo wget -O /usr/local/bin/docker-compose \
            "https://github.com/docker/compose/releases/download/${COMPOSE_VER}/docker-compose-$(uname -s)-$(uname -m)"
        sudo chmod +x /usr/local/bin/docker-compose

        DOCKER_CLI_PLUGINS=${DOCKER_CLI_PLUGINS:-"$HOME/.docker/cli-plugins"}
        mkdir -p "$DOCKER_CLI_PLUGINS"
        curl -fsSL \
            "https://github.com/docker/compose/releases/download/${COMPOSE_VER}/docker-compose-$(uname -s)-$(uname -m)" \
            -o "${DOCKER_CLI_PLUGINS}/docker-compose"
        chmod +x "${DOCKER_CLI_PLUGINS}/docker-compose"

        echo -e "${GREEN}‚úî Docker Compose ${COMPOSE_VER} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    else
        echo -e "${GREEN}‚úî Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (${NC}$(docker-compose --version)${GREEN})${NC}"
    fi
}

# --- –§—É–Ω–∫—Ü–∏—è: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–∑–ª–∞ ---
install_node() {
    install_docker
    install_docker_compose
    sudo apt install -y screen

    docker pull nexusxyz/nexus-cli:latest

    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à node id: " PRIVATE_KEY

    screen -S nexus -dm bash -c "docker run -it --init --name nexus nexusxyz/nexus-cli:latest start --node-id $PRIVATE_KEY"
    echo -e "${GREEN}‚úÖ –£–∑–µ–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    echo -e "${GREEN}‚û° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: screen -r nexus${NC}"
    echo -e "${GREEN}‚Ü© –î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ª–æ–≥–æ–≤: Ctrl+A, –∑–∞—Ç–µ–º D${NC}"
}

# --- –§—É–Ω–∫—Ü–∏—è: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —É–∑–ª–∞ ---
restart_node() {
    echo -e "${RED}‚ôª –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —É–∑–ª–∞...${NC}"
    screen -XS nexus quit >/dev/null 2>&1 || :
    docker stop nexus 2>/dev/null || true
    docker rm nexus 2>/dev/null || true

    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à node id: " PRIVATE_KEY

    screen -S nexus -dm bash -c "docker run -it --init --name nexus nexusxyz/nexus-cli:latest start --node-id $PRIVATE_KEY"
    echo -e "${GREEN}‚úÖ –£–∑–µ–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.${NC}"
}

# --- –§—É–Ω–∫—Ü–∏—è: –£–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–∞ ---
delete_node() {
    echo -e "${RED}üóë –£–¥–∞–ª—è–µ–º —É–∑–µ–ª...${NC}"
    screen -XS nexus quit 2>/dev/null
    docker stop nexus 2>/dev/null || true
    docker rm nexus 2>/dev/null || true
    docker rmi nexusxyz/nexus-cli:latest 2>/dev/null || true
    echo -e "${GREEN}‚úÖ –£–∑–µ–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω.${NC}"
}

# --- –§—É–Ω–∫—Ü–∏—è: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∑–ª–∞ ---
update_node() {
    echo -e "${PINK}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–∑–ª–∞...${NC}"
    screen -XS nexus quit >/dev/null 2>&1 || :
    docker stop nexus 2>/dev/null || true
    docker rm nexus 2>/dev/null || true
    docker pull nexusxyz/nexus-cli:latest

    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à node id: " PRIVATE_KEY

    screen -S nexus -dm bash -c "docker run -it --init --name nexus nexusxyz/nexus-cli:latest start --node-id $PRIVATE_KEY"
    echo -e "${GREEN}‚úÖ –£–∑–µ–ª –æ–±–Ω–æ–≤–ª–µ–Ω.${NC}"
}

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
CHOICE=$(whiptail --title "–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Nexus" \
  --menu "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:" 20 60 10 \
  "1" "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É" \
  "2" "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏" \
  "3" "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É" \
  "4" "–£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É" \
  "5" "–û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É" \
  3>&1 1>&2 2>&3)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ ---
if [ $? -ne 0 ]; then
  echo -e "${RED}‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –í—ã—Ö–æ–¥.${NC}"
  exit 1
fi

case $CHOICE in
  1) install_node ;;
  2)
    if screen -list | grep -q "nexus"; then
  screen -r nexus
else
  echo -e "${RED}‚ùå –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ —É–∑–µ–ª –Ω–µ –∑–∞–ø—É—â–µ–Ω.${NC}"
fi    ;;
  3) restart_node ;;
  4) delete_node ;;
  5) update_node ;;
  *) echo -e "${RED}–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è.${NC}" ;;
esac